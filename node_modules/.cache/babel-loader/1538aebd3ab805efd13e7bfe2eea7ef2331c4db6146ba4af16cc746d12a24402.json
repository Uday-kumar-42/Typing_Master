{"ast":null,"code":"var _jsxFileName = \"/home/rgukt/React/Vanilla_React/Typing_Speed/src/components/String.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function String({\n  str,\n  position\n}) {\n  _s();\n  const [visibleWords, setVisibleWords] = use;\n  useEffect(function () {\n    if (str !== null) {\n      const max = 5;\n      const startIndex = Math.max(position - max, 0);\n      const endIndex = Math.min(position + max, str.length - 1);\n      // Get the words to be displayed\n      visibleWords = setVisibleWords(str.slice(startIndex, endIndex + 1));\n    }\n  }, [str, position]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"str\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: visibleWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(String, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = String;\nvar _c;\n$RefreshReg$(_c, \"String\");","map":{"version":3,"names":["useEffect","React","jsxDEV","_jsxDEV","String","str","position","_s","visibleWords","setVisibleWords","use","max","startIndex","Math","endIndex","min","length","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rgukt/React/Vanilla_React/Typing_Speed/src/components/String.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport React from \"react\";\n\nexport default function String({str,position}){\n    const [visibleWords,setVisibleWords] = use\n    useEffect(\n        function () {\n          if (str !== null) {\n            const max = 5;\n            const startIndex = Math.max(position - max, 0);\n            const endIndex = Math.min(position + max, str.length - 1);\n            // Get the words to be displayed\n            visibleWords = setVisibleWords(str.slice(startIndex, endIndex + 1));\n          }\n        },\n        [str,position]\n      );\n\n    return(\n        <div className=\"str\">\n            <p>{str}</p>\n            <p>{visibleWords}</p>\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,MAAMA,CAAC;EAACC,GAAG;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAACC,eAAe,CAAC,GAAGC,GAAG;EAC1CV,SAAS,CACL,YAAY;IACV,IAAIK,GAAG,KAAK,IAAI,EAAE;MAChB,MAAMM,GAAG,GAAG,CAAC;MACb,MAAMC,UAAU,GAAGC,IAAI,CAACF,GAAG,CAACL,QAAQ,GAAGK,GAAG,EAAE,CAAC,CAAC;MAC9C,MAAMG,QAAQ,GAAGD,IAAI,CAACE,GAAG,CAACT,QAAQ,GAAGK,GAAG,EAAEN,GAAG,CAACW,MAAM,GAAG,CAAC,CAAC;MACzD;MACAR,YAAY,GAAGC,eAAe,CAACJ,GAAG,CAACY,KAAK,CAACL,UAAU,EAAEE,QAAQ,GAAG,CAAC,CAAC,CAAC;IACrE;EACF,CAAC,EACD,CAACT,GAAG,EAACC,QAAQ,CACf,CAAC;EAEH,oBACIH,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBhB,OAAA;MAAAgB,QAAA,EAAId;IAAG;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZpB,OAAA;MAAAgB,QAAA,EAAIX;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEd;AAAChB,EAAA,CArBuBH,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}