{"ast":null,"code":"var _jsxFileName = \"/home/rgukt/React/Vanilla_React/Typing_Speed/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [position, setPositoin] = useState(0);\n  const [count, setCount] = useState(0);\n  const [time, setTime] = useState(0);\n  const str = \"I am Uday Kumar\";\n  useEffect(function () {\n    function handleKeyPress(e) {\n      if (position === 0) {\n        const date = new Date();\n        setTime(() => {\n          return date.getMinutes() + date.getSeconds() / 60;\n        });\n      }\n      if (position === str.length) {\n        const date = new Date();\n        setTime(time => {\n          const curTime = date.getMinutes() + date.getSeconds() / 60;\n          return curTime - time;\n        });\n      }\n      if (e.keyCode === str.charCodeAt(position) && position < str.length) {\n        console.log(\"matched\");\n        setCount(count => count + 1);\n      }\n      setPositoin(position => position + 1);\n    }\n    document.addEventListener(\"keypress\", handleKeyPress);\n    return function () {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No of words matched : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current position : \", position]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), position === str.length]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"mDSMpIUtwQvStv70/dYfbvzsMME=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Main","_s","position","setPositoin","count","setCount","time","setTime","str","handleKeyPress","e","date","Date","getMinutes","getSeconds","length","curTime","keyCode","charCodeAt","console","log","document","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rgukt/React/Vanilla_React/Typing_Speed/src/components/Main.js"],"sourcesContent":["import { React, useEffect, useState } from \"react\";\n\nexport default function Main() {\n  const [position, setPositoin] = useState(0);\n  const [count, setCount] = useState(0);\n  const [time, setTime] = useState(0);\n  const str = \"I am Uday Kumar\";\n\n  useEffect(function () {\n    function handleKeyPress(e) {\n      if (position === 0) {\n        const date = new Date();\n        setTime(() => {\n          return date.getMinutes() + date.getSeconds() / 60;\n        });\n      }\n      if (position === str.length) {\n        const date = new Date();\n        setTime((time) => {\n          const curTime = date.getMinutes() + date.getSeconds() / 60;\n          return curTime - time;\n        });\n      }\n\n      if (e.keyCode === str.charCodeAt(position) && position < str.length) {\n        console.log(\"matched\");\n        setCount((count) => count + 1);\n      }\n      setPositoin((position) => position + 1);\n    }\n\n    document.addEventListener(\"keypress\", handleKeyPress);\n\n    return function () {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  });\n\n  return (\n    <div>\n      <p>{str}</p>\n      <p>No of words matched : {count}</p>\n      <p>Current position : {position}</p>\n      {position === str.length}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMW,GAAG,GAAG,iBAAiB;EAE7BZ,SAAS,CAAC,YAAY;IACpB,SAASa,cAAcA,CAACC,CAAC,EAAE;MACzB,IAAIR,QAAQ,KAAK,CAAC,EAAE;QAClB,MAAMS,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;QACvBL,OAAO,CAAC,MAAM;UACZ,OAAOI,IAAI,CAACE,UAAU,CAAC,CAAC,GAAGF,IAAI,CAACG,UAAU,CAAC,CAAC,GAAG,EAAE;QACnD,CAAC,CAAC;MACJ;MACA,IAAIZ,QAAQ,KAAKM,GAAG,CAACO,MAAM,EAAE;QAC3B,MAAMJ,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;QACvBL,OAAO,CAAED,IAAI,IAAK;UAChB,MAAMU,OAAO,GAAGL,IAAI,CAACE,UAAU,CAAC,CAAC,GAAGF,IAAI,CAACG,UAAU,CAAC,CAAC,GAAG,EAAE;UAC1D,OAAOE,OAAO,GAAGV,IAAI;QACvB,CAAC,CAAC;MACJ;MAEA,IAAII,CAAC,CAACO,OAAO,KAAKT,GAAG,CAACU,UAAU,CAAChB,QAAQ,CAAC,IAAIA,QAAQ,GAAGM,GAAG,CAACO,MAAM,EAAE;QACnEI,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QACtBf,QAAQ,CAAED,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC;MAChC;MACAD,WAAW,CAAED,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IACzC;IAEAmB,QAAQ,CAACC,gBAAgB,CAAC,UAAU,EAAEb,cAAc,CAAC;IAErD,OAAO,YAAY;MACjBY,QAAQ,CAACE,mBAAmB,CAAC,UAAU,EAAEd,cAAc,CAAC;IAC1D,CAAC;EACH,CAAC,CAAC;EAEF,oBACEV,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAIhB;IAAG;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZ7B,OAAA;MAAAyB,QAAA,GAAG,wBAAsB,EAACpB,KAAK;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC7B,OAAA;MAAAyB,QAAA,GAAG,qBAAmB,EAACtB,QAAQ;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnC1B,QAAQ,KAAKM,GAAG,CAACO,MAAM;EAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAAC3B,EAAA,CA5CuBD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}