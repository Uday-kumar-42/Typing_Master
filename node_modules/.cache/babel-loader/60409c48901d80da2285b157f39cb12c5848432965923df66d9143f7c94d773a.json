{"ast":null,"code":"var _jsxFileName = \"/home/rgukt/React/Vanilla_React/Typing_Speed/src/components/String.js\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function String({\n  str,\n  position\n}) {\n  // const [visibleWords,setVisibleWords] = useState(\"\")\n  // useEffect(\n  //     function () {\n  //       if (str !== null) {\n  //         const max = 5;\n  //         const startIndex = Math.max(position - max, 0);\n  //         const endIndex = Math.min(position + max, str.length - 1);\n  //         // Get the words to be displayed\n  //         visibleWords = setVisibleWords(str.slice(startIndex, endIndex + 1));\n  //       }\n  //     },\n  //     [str,position]\n  //   );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"str\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: visibleWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = String;\nvar _c;\n$RefreshReg$(_c, \"String\");","map":{"version":3,"names":["useEffect","useState","React","jsxDEV","_jsxDEV","String","str","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","visibleWords","_c","$RefreshReg$"],"sources":["/home/rgukt/React/Vanilla_React/Typing_Speed/src/components/String.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport React from \"react\";\n\nexport default function String({str,position}){\n    // const [visibleWords,setVisibleWords] = useState(\"\")\n    // useEffect(\n    //     function () {\n    //       if (str !== null) {\n    //         const max = 5;\n    //         const startIndex = Math.max(position - max, 0);\n    //         const endIndex = Math.min(position + max, str.length - 1);\n    //         // Get the words to be displayed\n    //         visibleWords = setVisibleWords(str.slice(startIndex, endIndex + 1));\n    //       }\n    //     },\n    //     [str,position]\n    //   );\n\n    return(\n        <div className=\"str\">\n            <p>{str}</p>\n            <p>{visibleWords}</p>\n        </div>\n    )\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,MAAMA,CAAC;EAACC,GAAG;EAACC;AAAQ,CAAC,EAAC;EAC1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIH,OAAA;IAAKI,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBL,OAAA;MAAAK,QAAA,EAAIH;IAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZT,OAAA;MAAAK,QAAA,EAAIK;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEd;AAACE,EAAA,GArBuBV,MAAM;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}