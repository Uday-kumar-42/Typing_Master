{"ast":null,"code":"var _jsxFileName = \"/home/rgukt/React/Vanilla_React/Typing_Speed/src/components/String.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function String({\n  str,\n  position\n}) {\n  _s();\n  const [visibleWords, setVisibleWords] = useState(\"\");\n  useEffect(function () {\n    if (str !== null) {\n      const max = 20;\n      const startIndex = Math.max(position - max, 0);\n      const endIndex = Math.min(position + max, str.length - 1);\n      // Get the words to be displayed\n      setVisibleWords(str.slice(startIndex, endIndex + 1));\n    }\n  }, [str, position]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"str\",\n    children: Array.from({\n      length: visibleWords\n    }, (_, i) => i + 1).map(i => {\n      return /*#__PURE__*/_jsxDEV(Letter, {\n        letter: visibleWords[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(String, \"SDmP+Khp3WS8jktCqgGrGijCDuI=\");\n_c = String;\nfunction Letter({\n  letter\n}) {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: letter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Letter;\nvar _c, _c2;\n$RefreshReg$(_c, \"String\");\n$RefreshReg$(_c2, \"Letter\");","map":{"version":3,"names":["useEffect","useState","React","jsxDEV","_jsxDEV","String","str","position","_s","visibleWords","setVisibleWords","max","startIndex","Math","endIndex","min","length","slice","className","children","Array","from","_","i","map","Letter","letter","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["/home/rgukt/React/Vanilla_React/Typing_Speed/src/components/String.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport React from \"react\";\n\nexport default function String({str,position}){\n    const [visibleWords,setVisibleWords] = useState(\"\")\n    useEffect(\n        function () {\n          if (str !== null) {\n            const max = 20;\n            const startIndex = Math.max(position - max, 0);\n            const endIndex = Math.min(position + max, str.length - 1);\n            // Get the words to be displayed\n            setVisibleWords(str.slice(startIndex, endIndex + 1));\n          }\n        },\n        [str,position]\n      );\n\n    return(\n        <div className=\"str\">\n            {Array.from({length:visibleWords},(_,i)=>i+1).map((i)=>{\n                return <Letter letter={visibleWords[i]} key={i} />\n            })}\n        </div>\n    )\n}\n\nfunction Letter({letter}){\n    return(\n        <span>{letter}</span>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,MAAMA,CAAC;EAACC,GAAG;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAACC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACnDD,SAAS,CACL,YAAY;IACV,IAAIM,GAAG,KAAK,IAAI,EAAE;MAChB,MAAMK,GAAG,GAAG,EAAE;MACd,MAAMC,UAAU,GAAGC,IAAI,CAACF,GAAG,CAACJ,QAAQ,GAAGI,GAAG,EAAE,CAAC,CAAC;MAC9C,MAAMG,QAAQ,GAAGD,IAAI,CAACE,GAAG,CAACR,QAAQ,GAAGI,GAAG,EAAEL,GAAG,CAACU,MAAM,GAAG,CAAC,CAAC;MACzD;MACAN,eAAe,CAACJ,GAAG,CAACW,KAAK,CAACL,UAAU,EAAEE,QAAQ,GAAG,CAAC,CAAC,CAAC;IACtD;EACF,CAAC,EACD,CAACR,GAAG,EAACC,QAAQ,CACf,CAAC;EAEH,oBACIH,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,EACfC,KAAK,CAACC,IAAI,CAAC;MAACL,MAAM,EAACP;IAAY,CAAC,EAAC,CAACa,CAAC,EAACC,CAAC,KAAGA,CAAC,GAAC,CAAC,CAAC,CAACC,GAAG,CAAED,CAAC,IAAG;MACnD,oBAAOnB,OAAA,CAACqB,MAAM;QAACC,MAAM,EAAEjB,YAAY,CAACc,CAAC;MAAE,GAAMA,CAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACtD,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtB,EAAA,CAtBuBH,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAwB9B,SAASoB,MAAMA,CAAC;EAACC;AAAM,CAAC,EAAC;EACrB,oBACItB,OAAA;IAAAe,QAAA,EAAOO;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAE7B;AAACE,GAAA,GAJQP,MAAM;AAAA,IAAAM,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}