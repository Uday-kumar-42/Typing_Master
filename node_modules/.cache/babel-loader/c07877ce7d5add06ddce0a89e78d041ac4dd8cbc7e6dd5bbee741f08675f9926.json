{"ast":null,"code":"var _jsxFileName = \"/home/rgukt/React/Vanilla_React/Typing_Speed/src/components/FinalResults.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FinalResults({\n  words,\n  time,\n  count,\n  position\n}) {\n  let text = \"\";\n  const wpm = Math.floor(words / (time.current / 60000));\n  const acc = Math.floor(count.current / position * 100);\n  if (wpm > 25 && acc > 75) {\n    text = `Fantastic,this is an important milestone on your typing journey. Challenge yourself to hit 30 WPM and aim for 90% accuracy next. The sky's the limit!`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"circular-progress\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"inner-circle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"accuracy-value\",\n          children: \"93%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"accuracy-text\",\n          children: \"real accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"label\",\n      children: \"accuracy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = FinalResults;\nvar _c;\n$RefreshReg$(_c, \"FinalResults\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FinalResults","words","time","count","position","text","wpm","Math","floor","current","acc","children","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rgukt/React/Vanilla_React/Typing_Speed/src/components/FinalResults.jsx"],"sourcesContent":["import React from \"react\";\n\nexport default function FinalResults({ words, time, count, position }) {\n  let text = \"\";\n  const wpm = Math.floor(words / (time.current / 60000));\n  const acc = Math.floor((count.current / position) * 100);\n  if (wpm > 25 && acc > 75) {\n    text = `Fantastic,this is an important milestone on your typing journey. Challenge yourself to hit 30 WPM and aim for 90% accuracy next. The sky's the limit!`;\n  }\n  return (\n    <div>\n      <div class=\"circular-progress\">\n        <div class=\"inner-circle\">\n          <span class=\"accuracy-value\">93%</span>\n          <p class=\"accuracy-text\">real accuracy</p>\n        </div>\n      </div>\n      <p class=\"label\">accuracy</p>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,YAAYA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EACrE,IAAIC,IAAI,GAAG,EAAE;EACb,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACP,KAAK,IAAIC,IAAI,CAACO,OAAO,GAAG,KAAK,CAAC,CAAC;EACtD,MAAMC,GAAG,GAAGH,IAAI,CAACC,KAAK,CAAEL,KAAK,CAACM,OAAO,GAAGL,QAAQ,GAAI,GAAG,CAAC;EACxD,IAAIE,GAAG,GAAG,EAAE,IAAII,GAAG,GAAG,EAAE,EAAE;IACxBL,IAAI,GAAG,uJAAuJ;EAChK;EACA,oBACEN,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAKa,KAAK,EAAC,mBAAmB;MAAAD,QAAA,eAC5BZ,OAAA;QAAKa,KAAK,EAAC,cAAc;QAAAD,QAAA,gBACvBZ,OAAA;UAAMa,KAAK,EAAC,gBAAgB;UAAAD,QAAA,EAAC;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvCjB,OAAA;UAAGa,KAAK,EAAC,eAAe;UAAAD,QAAA,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNjB,OAAA;MAAGa,KAAK,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV;AAACC,EAAA,GAlBuBjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}